1. donnez les commandes directes (ad-hoc) permettant de:
a. créer le sous-dossier log dans le dossier /tmp 
b. créer un fichier log1.txt dans /tmp/log
c. mettre le fichier /tmp/log/log1.txt en mode 755
d. écrire "coucou" dans le fichier /tmp/log/log1.txt
e. supprimer le fichier /tmp/log/log1.txt
f. supprimer le dossier /tmp/log
n.b: pas de playbook ! Juste les commandes ansible


2. playbook exo2.yaml
écrire un playbook qui:
- crée un dossier nommé private dans le home directory de osboxes
- copie dans ce dossier un fichier "secret.txt"
- remplace (voir module replace) la chaîne "[father]" par le hostname de la
machine. Etat du fichier secret.txt après remplacement: Ton père est slave1.
Cette tâche ne sera executée que sur le host slave1


3. playbook exo3.yaml
créer un playbook qui sur slave1:
- installe les paquets nodejs et npm
- git clone (voir module git) le dépôt suivant: https://gitlab.com/cdufour1/nodeapp.git dans /tmp/nodeapp
- copie le fichier script.js dans le home directory d'osboxes
facultatif:
- execute le script (commande: node script.js)
- affichage côté master le retour de l'exécution de cette commande


4. créer un playbook exo4.yaml exécutant le script files/system.sh sur slave1 et affichant les sorties
côté master

5. ignorez

6. rédiger un playbook exo6_clean.yaml détruisant toutes les ressources produites
par l'exécution des playbook example6.yaml et example7.yaml

7. playbook exo7.yaml
rédiger un playbook qui, sur slave1:
- installe le paquet apache2
- démarre le service apache2
- crée un groupe dev
- crée un utilisateur dev1 appartenant aux groupes dev + sudo, mot de passe: dev1
- crée un sous-dossier dev1 dans le dossier /var/www/html
- copie le template user.html.j2 dans le dossier /var/www/html/dev1. 
    renommer le fichier user.html
	définir dans le playbook une variable "prof" afin d'alimenter le template
- crée un lien symbolique /home/osboxes/web_dev1 pointant vers /var/www/html/dev1
- fait une requête http sur http://localhost/dev1/user.html par le module ansible.builtin.uri
- affiche le retour de la requête (content), grâce au module debug, dans le terminal de la master